name: Bug Report
description: If you notice an aspect of the plugin isn't working as per the README, raise a bug report
title: "[Bug]: "
labels: ["bug"]
assignees: olimorris

body:
    - type: markdown
      attributes:
        value: |
          Thanks for taking the time to fill out this bug report! This form may seem onerous but it makes a resolution much quicker for you and I.
    - type: markdown
      attributes:
        value: |
          ## Test with a `minimal.lua` file
          I know the temptation is to skip this step but please don't.

          Firstly, test and run Neovim with the minimal config below. Be sure to add your CodeCompanion.nvim config, saving to a `minimal.lua` file and adding any additional plugins you may need:
          ```lua
          local root = vim.fn.fnamemodify("./.repro", ":p")

          -- set stdpaths to use .repro
          for _, name in ipairs({ "config", "data", "state", "cache" }) do
            vim.env[("XDG_%s_HOME"):format(name:upper())] = root .. "/" .. name
          end

          -- bootstrap lazy
          local lazypath = root .. "/plugins/lazy.nvim"
          if not vim.loop.fs_stat(lazypath) then
            vim.fn.system({
              "git",
              "clone",
              "--filter=blob:none",
              "--single-branch",
              "https://github.com/folke/lazy.nvim.git",
              lazypath,
            })
          end
          vim.opt.runtimepath:prepend(lazypath)

          -- Your CodeCompanion setup
          local plugins = {
            {
              "olimorris/codecompanion.nvim",
              dependencies = {
                { "nvim-treesitter/nvim-treesitter", build = ":TSUpdate"},
                "nvim-lua/plenary.nvim",
                "nvim-telescope/telescope.nvim",
                {
                  "stevearc/dressing.nvim",
                  opts = {},
                },
              },
              config = function()
                require("codecompanion").setup({
                  strategies = { -- Change the adapters as required
                    chat = "openai",
                    inline = "openai",
                  },
                })
              end,
            }
          }

          require("lazy").setup(plugins, {
            root = root .. "/plugins",
          })

          -- setup treesitter
          local ok, treesitter = pcall(require, "nvim-treesitter.configs")
          if ok then
            treesitter.setup({
              ensure_installed = "all",
              ignore_install = { "phpdoc" }, -- list of parser which cause issues or crashes
              highlight = { enable = true },
            })
          end
          ```

          Once you"ve updated for your config, run Neovim with this command:
          ```sh
          nvim --clean -u minimal.lua
          ```
          > **Note:** You may need to do this a couple of times for Treesitter to fully download and sync

    - type: textarea
      id: codecompanion-config
      attributes:
        label: Your `minimal.lua` config
        description: Please paste your minimal.lua config here
        placeholder: |
          ```lua
          -- Your minimal.lua config here
          ```
      validations:
        required: true

    - type: textarea
      id: errors
      attributes:
        label: Error messages
        description: Please paste any error messages you receive
        placeholder: |
          ```lua
          -- Error messages here
          ```
      validations:
        required: false

    - type: textarea
      id: health
      attributes:
        label: Health check output
        description: Please paste the output from `:checkhealth codecompanion`
      validations:
        required: true

    - type: textarea
      id: logs
      attributes:
        label: Log output
        description: Please paste the relevant output from the log located at `~/.local/state/nvim/codecompanion.log`
      validations:
        required: true

    - type: textarea
      id: bug
      attributes:
        label: Describe the bug
        description: Please describe the bug and include any screenshots
        placeholder: |
          ### What I expect to happen

          ### What actually happens

      validations:
        required: true

    - type: textarea
      id: reproduce
      attributes:
        label: Reproduce the bug
        description: Please include the steps to reproduce the bug
        placeholder: |
          Steps to reproduce:
          1.
          2.
          3.
      validations:
        required: false

    - type: checkboxes
      id: final-checks
      attributes:
        label: Final checks
        description: |
          Before you submit, please make sure you have completed the following steps:
        options:
          - label: I have made sure this issue exists in the latest version of the plugin
            required: true
          - label: I have tested with the `minimal.lua` config file above and still get the issue
            required: true
